# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            array $indexDefinition: {'index': 'products'}

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Subscriber\JwtEventSubscriber:
        arguments:
            - '@serializer'
        tags:
            - { name: kernel.event_subscriber }

    #Creating Service with Non Static Factory
    #Elasticsearch\ClientBuilder: ~
    #Elasticsearch\Client:
    #    factory:   ['@Elasticsearch\ClientBuilder', fromConfig]
    #    arguments: ['%es_config%']



    App\Adapter\SearchAdapter:
        arguments:
            - '@logger'
            - '%elastic_search_client_config%'

    #App\EventSubscriber\ResponseSubscriber:
        #tags:
         #   - { name: kernel.event_listener, event: kernel.response }
         #   - { name: kernel.event_listener, event: kernel.exception }

    #app.normalizer.violation_exception:
    #    class: App\Normalizer\ConstraintViolationListNormalizer
    #    tags:
    #        - { name: app.normalizer }

    #app.converter.create_entity:
    #    class: App\ParamConverter\SerializedParamConverter
    #    arguments:
    #        - '@serializer'
    #        - '@doctrine'
    #        - '@doctrine.orm.entity_manager'
    #    tags:
    #        - { name: request.param_converter, converter: create_entity_converter }